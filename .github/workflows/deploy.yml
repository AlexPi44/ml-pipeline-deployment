name: Deploy Pipeline
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - prod
jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js (for CDK)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install CDK
        run: npm install -g aws-cdk
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.CI_ASSUME_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Install Python dependencies
        run: |
          cd infra
          pip install -r requirements.txt
      - name: CDK Diff
        run: |
          cd infra
          cdk diff -c env=${{ github.event.inputs.environment || 'staging' }}
      - name: CDK Deploy
        run: |
          cd infra
          cdk deploy --all --require-approval never -c env=${{ github.event.inputs.environment || 'staging' }}
  canary-deploy:
    runs-on: ubuntu-latest
    needs: deploy-infra
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.CI_ASSUME_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy canary
        run: |
          ./scripts/deploy_canary.sh ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO }}:inference-${{ github.sha }}
      - name: Wait for canary stabilization
        run: sleep 60
      - name: Run smoke tests
        run: |
          pip install -r requirements.txt
          pytest tests/smoke_canary.py -v
      - name: Check canary metrics
        id: canary-metrics
        run: |
          python scripts/check_canary_metrics.py --threshold-error-rate 0.02 --threshold-latency 500
      - name: Promote canary
        if: success()
        run: ./scripts/promote_canary.sh
      - name: Rollback on failure
        if: failure()
        run: ./scripts/rollback.sh
